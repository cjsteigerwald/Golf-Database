package Golf;

import java.awt.Toolkit;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/**
 * AddFormJDialog.java
 * 
 * AddFormJDialog is called when the user selects to add a new golfer.  The dialog
 * allows the user to input first name, last name, email, phone number, and
 * golfer rating.  Prior to leaving any field they are validated by the 
 * Validation class so user must input correct parameters before being able
 * to add new golfer.  Once all parameters are met and user selects to add
 * golfer this form disposes itself.
 * <pre>
 *    Project: Shipping Hub
 *    Platform: jdk 1.7.0_17; NetBeans IDE 7.3; Windows 7
 *    Course:
 *    Hourse: 15 hours and 45 minutes
 *    Created on Apr 24, 2013, 10:45:39 PM
 *    Revised on
 * </pre>
 * @see:        java.awt.Toolkit
 * @see         javax.swing.JOptionPane;
 * @see         java.text.DecimalFormat;
 */
public class AddFormJDialog extends javax.swing.JDialog
{
    
    boolean isComplete = false;
    GolfGUI myGUI = new GolfGUI();
    Golfer newGolfer;
    //GolfDataLibrary myLibrary = new GolfDataLibrary();
    public static boolean addNewGolferComplete;
    public static Golfer tempNewGolfer = new Golfer();
    
        
    
    //DecimalFormat phoneFmt = new DecimalFormat("###-###-####");
    /**
     * No Nico this is not using a magic number.  This holds an int of the 
     * arraySize plus 2 for counting starting at 0 and 1 more for the to be
     * added golfer.  Therefore, must have a + 2 the size of the array.
     */
    int arraySize = myGUI.myGolferList.size() + 2; 

    /**
     * Creates new form AddFormJDialog
     */
    public AddFormJDialog(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        this.getRootPane().setDefaultButton(saveJButton); //set saveJButton as default
        setIconImage(Toolkit.getDefaultToolkit().getImage("src/Resources/golfdb.txt"));
        setLocationRelativeTo(null);
        setComboBox();
        messageJLabel.setVisible(false);
        this.setTitle("Add New Golfer");
    }
    /**
     * <pre>
     * Method setComboBox
     * setComboBox iterates through the myGolferList array and adds a number
     * to the levelJComboBox.
     * precondition: a valid array is used
     * postcondition: that the combo box is populated with the number of golfers
     * plus one to allow new golfer.
     * @param void
     * @return void
     * @date: 5/15/13
     * @author: Chris Steigerwald
     * </pre>
     */
    private void setComboBox()
    {
        int index = 1;
        for ( int i = 0; i <= myGUI.myGolferList.size(); i++)
        {
            levelJComboBox.addItem(index);
            index++;            
        }
    }
    
     /**
     * <pre>
     * Method setNewGolfer
     * setNewGolfer is a check to make sure that conditions have been met
     * before sending golfer object to golfer constructor for creation
     * precondition: valid golfer object is ready, and isCompleted is true
     * postcondition: after check new golfer will be created     
     * @param Golfer newGolfer, boolean isCompeted
     * @return void
     * @date: 5/15/13
     * @author: Chris Steigerwald
     * </pre>
     */
    public static void setNewGolfer(Golfer newGolfer, boolean isCompleted)
    {
        tempNewGolfer = newGolfer;
        addNewGolferComplete = isCompleted;        
    }
    
     /**
     * <pre>
     * Method golferExists
     * golferExists checks to see if a current golfer is the database exists
     * with same last name, first name, and phone number.  This method uses
     * the .equals method from the golfer class.  If it finds golfer already
     * in database it returns true, else false means no match found
     * precondition: valid golfer object
     * postcondition: after check boolean expression is returned true for 
     * golfer already exists, or false for golfer does not exist in this
     * database.
     * @param Golfer newGolfer, boolean isCompeted
     * @return thereIsOne boolean expression 
     * @date: 5/15/13
     * @author: Chris Steigerwald
     * </pre>
     */
    private boolean golferExists(Golfer aGolfer)
    {
        boolean thereIsOne = false;
        for (int index = 0; index < myGUI.myGolferList.size(); index++ )
        {
            if(myGUI.myGolferList.get(index).equals(aGolfer))
                thereIsOne = true;
        }
            return thereIsOne;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        titleJPanel = new javax.swing.JPanel();
        logoJLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        informationJPanel = new javax.swing.JPanel();
        firstJLabel = new javax.swing.JLabel();
        firstJTextField = new javax.swing.JTextField();
        lastJLabel = new javax.swing.JLabel();
        lastJTextField = new javax.swing.JTextField();
        emailJLabel = new javax.swing.JLabel();
        emailJTextField = new javax.swing.JTextField();
        phoneJLabel = new javax.swing.JLabel();
        phoneJTextField = new javax.swing.JTextField();
        ratinglJLabel = new javax.swing.JLabel();
        levelJComboBox = new javax.swing.JComboBox();
        controlPanel = new javax.swing.JPanel();
        saveJButton = new javax.swing.JButton();
        cancelJButton = new javax.swing.JButton();
        messageJPanel = new javax.swing.JPanel();
        messageJLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        logoJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/golfLogo.jpg"))); // NOI18N

        titleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titleLabel.setText("Golf Database");

        javax.swing.GroupLayout titleJPanelLayout = new javax.swing.GroupLayout(titleJPanel);
        titleJPanel.setLayout(titleJPanelLayout);
        titleJPanelLayout.setHorizontalGroup(
            titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoJLabel)
                .addGap(74, 74, 74)
                .addComponent(titleLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        titleJPanelLayout.setVerticalGroup(
            titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titleJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleLabel)
                .addGap(39, 39, 39))
        );

        firstJLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        firstJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        firstJLabel.setText("First Name *:");

        firstJTextField.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        firstJTextField.setToolTipText("Golfer first name");
        firstJTextField.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                firstJTextFieldKeyTyped(evt);
            }
        });

        lastJLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        lastJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lastJLabel.setText("Last Name *:");

        lastJTextField.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        lastJTextField.setToolTipText("Golfer last name");
        lastJTextField.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                lastJTextFieldKeyTyped(evt);
            }
        });

        emailJLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        emailJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        emailJLabel.setText("Email Address:");

        emailJTextField.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        emailJTextField.setToolTipText("Golfer email address");
        emailJTextField.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                emailJTextFieldFocusLost(evt);
            }
        });

        phoneJLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        phoneJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        phoneJLabel.setText("Phone Number *:");

        phoneJTextField.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        phoneJTextField.setToolTipText("Golfer phone number");
        phoneJTextField.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                phoneJTextFieldFocusLost(evt);
            }
        });

        ratinglJLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        ratinglJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ratinglJLabel.setText("Level *:");
        ratinglJLabel.setToolTipText("");

        javax.swing.GroupLayout informationJPanelLayout = new javax.swing.GroupLayout(informationJPanel);
        informationJPanel.setLayout(informationJPanelLayout);
        informationJPanelLayout.setHorizontalGroup(
            informationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationJPanelLayout.createSequentialGroup()
                .addGroup(informationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informationJPanelLayout.createSequentialGroup()
                        .addGroup(informationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(informationJPanelLayout.createSequentialGroup()
                                .addComponent(lastJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informationJPanelLayout.createSequentialGroup()
                                .addComponent(firstJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(informationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(informationJPanelLayout.createSequentialGroup()
                        .addComponent(emailJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(emailJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(informationJPanelLayout.createSequentialGroup()
                        .addComponent(phoneJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(phoneJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(informationJPanelLayout.createSequentialGroup()
                        .addComponent(ratinglJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(levelJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        informationJPanelLayout.setVerticalGroup(
            informationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationJPanelLayout.createSequentialGroup()
                .addGroup(informationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informationJPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lastJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(informationJPanelLayout.createSequentialGroup()
                        .addGroup(informationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(lastJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(informationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(informationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(phoneJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(informationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ratinglJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(levelJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        controlPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        controlPanel.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        saveJButton.setBackground(new java.awt.Color(204, 255, 204));
        saveJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        saveJButton.setMnemonic('S');
        saveJButton.setText("Save");
        saveJButton.setToolTipText("Save new city");
        saveJButton.setMinimumSize(new java.awt.Dimension(57, 45));
        saveJButton.setPreferredSize(new java.awt.Dimension(57, 35));
        saveJButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveJButtonActionPerformed(evt);
            }
        });
        controlPanel.add(saveJButton);

        cancelJButton.setBackground(new java.awt.Color(204, 255, 204));
        cancelJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelJButton.setMnemonic('n');
        cancelJButton.setText("Cancel");
        cancelJButton.setToolTipText("Cancel adding new city");
        cancelJButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelJButtonActionPerformed(evt);
            }
        });
        controlPanel.add(cancelJButton);

        messageJPanel.setLayout(new java.awt.GridLayout(1, 1));

        messageJLabel.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        messageJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        messageJLabel.setToolTipText("");
        messageJPanel.add(messageJLabel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(informationJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(messageJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(informationJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveJButtonActionPerformed
    {//GEN-HEADEREND:event_saveJButtonActionPerformed
        /**
         * When the user presses the save button instance variables are 
         * created from the text fields and checked to make sure that required 
         * fields are filled in (checkComplete Method).  Text fields are not
         * validated here because they have already been validated.  The
         * golferExists method is called to check if this golfer is already
         * in the database.  If the golfer is already in the database the user 
         * is notified via JOptionPane that golfer exists, if all required 
         * fields are not filled out user is notified vis JOptionPane to fill
         * out all required fields.
         */
        // --- instantiates instance of GolfGUI for adding a new golfer ---
        myGUI = new GolfGUI();
        // --- local instance variables ---
                String first = firstJTextField.getText();
                String last = lastJTextField.getText();
                String email = emailJTextField.getText();
                String phone = phoneJTextField.getText();
                int rank = levelJComboBox.getSelectedIndex() + 1;  // +1 is for computer counts starting at 0
        // checks to make sure all required fields are filled out        
        if(Validation.checkComplete(first, last, email, phone, rank))
        {
            if(!golferExists(tempNewGolfer))
            {            
                newGolfer = new Golfer(first, last, email, phone, rank);
                isComplete = true;
                myGUI.newGolfer(newGolfer, isComplete);
                myGUI.displayGolfer();
                this.dispose();              
            }        
            else
            {
                JOptionPane.showMessageDialog(null, "Golfer already exists!", "Error",
                        JOptionPane.WARNING_MESSAGE);
            } 
        }
        else
        {
            messageJLabel.setVisible(true);
            messageJLabel.setText("All fields with * must be completed!");
        }
    }//GEN-LAST:event_saveJButtonActionPerformed

    private void cancelJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelJButtonActionPerformed
    {//GEN-HEADEREND:event_cancelJButtonActionPerformed
        // Dispose the form if user decides to cancel
        isComplete = false;
        myGUI.newGolfer(newGolfer, isComplete);        
        this.dispose();
    }//GEN-LAST:event_cancelJButtonActionPerformed

    private void phoneJTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_phoneJTextFieldFocusLost
    {//GEN-HEADEREND:event_phoneJTextFieldFocusLost
        // When user exits phoneJTextField input is validated if not valid
        // message is display letter user know  that phone number is invalid.
        // when validated the number format is changed to hyphenated.
        String phone = phoneJTextField.getText();        
        if(Validation.isPhone(phone) == false)
        {
            messageJLabel.setVisible(true);
            messageJLabel.setText("Invalid phone number, please try again!");
            
        }
        else
        {
            messageJLabel.setVisible(false);
            messageJLabel.setText("");
            phone = phone.replaceFirst("^(\\d{3})(\\d{3})(\\d{4})$", "$1-$2-$3");
            phoneJTextField.setText(phone);
        }
    }//GEN-LAST:event_phoneJTextFieldFocusLost

    private void firstJTextFieldKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_firstJTextFieldKeyTyped
    {//GEN-HEADEREND:event_firstJTextFieldKeyTyped
        // When user types each key stroke is validated to see if it is 
        // alphabetical text.  If anything other than a letter is typed
        // it will be consumed.
        
        char c = evt.getKeyChar();

        if (Validation.validText(c) == true)
        {
            String text = String.valueOf(c);           
        }
        else
        {
            evt.consume();
        }    
    }//GEN-LAST:event_firstJTextFieldKeyTyped

    private void lastJTextFieldKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_lastJTextFieldKeyTyped
    {//GEN-HEADEREND:event_lastJTextFieldKeyTyped
        // When user types each key stroke is validated to see if it is 
        // alphabetical text.  If anything other than a letter is typed
        // it will be consumed.
        char c = evt.getKeyChar();

        if (Validation.validText(c) == true)
        {
            String text = String.valueOf(c);           
        }
        else
        {
            evt.consume();
        }    
    }//GEN-LAST:event_lastJTextFieldKeyTyped

    private void emailJTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_emailJTextFieldFocusLost
    {//GEN-HEADEREND:event_emailJTextFieldFocusLost
        /**
         * When edit is selected this method will read in the email address
         * and if it is not blank will send it to the validation class to be
         * validated.  If validated user will be prompted to save info.  If 
         * invalid user will be displayed a message stating invalid email.
         */
        
        String email = emailJTextField.getText();
        
        if (Validation.checkEmail(email) == false)
        {
            emailJTextField.setText(" ");                    
            messageJLabel.setVisible(true);
            messageJLabel.setText("Invalid Email, please try again!");
        }
        else
        {
            messageJLabel.setVisible(false);
            messageJLabel.setText("");
            emailJTextField.setText(email);            
        }
    }//GEN-LAST:event_emailJTextFieldFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(AddFormJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(AddFormJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(AddFormJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(AddFormJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                AddFormJDialog dialog = new AddFormJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e)
                    {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelJButton;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JLabel emailJLabel;
    private javax.swing.JTextField emailJTextField;
    private javax.swing.JLabel firstJLabel;
    private javax.swing.JTextField firstJTextField;
    private javax.swing.JPanel informationJPanel;
    private javax.swing.JLabel lastJLabel;
    private javax.swing.JTextField lastJTextField;
    private javax.swing.JComboBox levelJComboBox;
    private javax.swing.JLabel logoJLabel;
    private javax.swing.JLabel messageJLabel;
    private javax.swing.JPanel messageJPanel;
    private javax.swing.JLabel phoneJLabel;
    private javax.swing.JTextField phoneJTextField;
    private javax.swing.JLabel ratinglJLabel;
    private javax.swing.JButton saveJButton;
    private javax.swing.JPanel titleJPanel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
